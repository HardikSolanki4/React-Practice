{"version":3,"sources":["components/UI/Card.module.css","components/quotes/QuoteForm.module.css","components/UI/Card.js","components/quotes/QuoteForm.js","pages/NewQuotes.js"],"names":["module","exports","Card","props","className","classes","card","children","QuoteForm","authorInputRef","useRef","textInputRef","useState","isFormFocused","setIsFormFocused","when","message","onFocus","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","console","log","onAddQuote","author","text","isLoading","loading","LoadingSpinner","control","htmlFor","type","id","ref","rows","actions","onClick","NewQuotes","history","useHistory","useHttp","addQuote","sendRequest","status","useEffect","push","data"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,qB,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,2BAA2B,QAAU,2BAA2B,QAAU,6B,yGCKtHC,EAJF,SAACC,GACZ,OAAO,qBAAKC,UAAWC,IAAQC,KAAxB,SAA+BH,EAAMI,Y,yBCkE/BC,EA7DG,SAACL,GACjB,IAAMM,EAAiBC,mBACjBC,EAAeD,mBACrB,EAA0CE,oBAAS,GAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KAqBA,OACE,eAAC,WAAD,WACE,cAAC,IAAD,CACEC,KAAMF,EACNG,QAAS,iBAAM,kCAEjB,cAAC,EAAD,UACE,uBACEC,QAZiB,WACvBH,GAAiB,IAYXV,UAAWC,IAAQa,KACnBC,SA7BR,SAA2BC,GACzBA,EAAMC,iBAEN,IAAMC,EAAgBb,EAAec,QAAQC,MACvCC,EAAcd,EAAaY,QAAQC,MAGzCE,QAAQC,IAAId,GACZV,EAAMyB,WAAW,CAAEC,OAAQP,EAAeQ,KAAML,KAkB5C,UAKGtB,EAAM4B,WACL,qBAAK3B,UAAWC,IAAQ2B,QAAxB,SACE,cAACC,EAAA,EAAD,MAIJ,sBAAK7B,UAAWC,IAAQ6B,QAAxB,UACE,uBAAOC,QAAQ,SAAf,oBACA,uBAAOC,KAAK,OAAOC,GAAG,SAASC,IAAK7B,OAEtC,sBAAKL,UAAWC,IAAQ6B,QAAxB,UACE,uBAAOC,QAAQ,OAAf,kBACA,0BAAUE,GAAG,OAAOE,KAAK,IAAID,IAAK3B,OAEpC,qBAAKP,UAAWC,IAAQmC,QAAxB,SACE,wBAAQC,QAnCQ,WACxB3B,GAAiB,IAkC2BV,UAAU,MAA9C,kCChCGsC,UArBG,WAChB,IAAMC,EAAUC,cAEhB,EAAgCC,YAAQC,KAAhCC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,OAErBC,qBAAU,WACO,cAAXD,GACFL,EAAQO,KAAK,aAEd,CAACF,EAAQL,IAKZ,OACE,8BACE,cAAC,EAAD,CAAWZ,UAAsB,YAAXiB,EAAsBpB,WALxB,SAACuB,GACvBJ,EAAYI","file":"static/js/6.992d2c0d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1m44e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__3Ndw9\",\"loading\":\"QuoteForm_loading__iDpS0\",\"control\":\"QuoteForm_control__2lCiE\",\"actions\":\"QuoteForm_actions__354La\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { Fragment } from 'react';\nimport { useRef, useState } from 'react';\nimport { Prompt } from 'react-router-dom';\n\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = (props) => {\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n  const [isFormFocused, setIsFormFocused] = useState(false);\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n    console.log(isFormFocused);\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  const formFinishHandler = () => {\n    setIsFormFocused(false);\n  };\n\n  const formFocusHandler = () => {\n    setIsFormFocused(true);\n  };\n\n  return (\n    <Fragment>\n      <Prompt\n        when={isFormFocused}\n        message={() => 'Are you sure want to leave??'}\n      />\n      <Card>\n        <form\n          onFocus={formFocusHandler}\n          className={classes.form}\n          onSubmit={submitFormHandler}\n        >\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor='author'>Author</label>\n            <input type='text' id='author' ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor='text'>Text</label>\n            <textarea id='text' rows='5' ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button onClick={formFinishHandler} className='btn'>\n              Add Quote\n            </button>\n          </div>\n        </form>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n","import { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport useHttp from '../components/hooks/use-http';\nimport { addQuote } from '../components/lib/api';\nimport QuoteForm from '../components/quotes/QuoteForm';\n\nconst NewQuotes = () => {\n  const history = useHistory();\n\n  const { sendRequest, status } = useHttp(addQuote);\n\n  useEffect(() => {\n    if (status === 'completed') {\n      history.push('/quotes');\n    }\n  }, [status, history]);\n\n  const addQuoteHandler = (data) => {\n    sendRequest(data);\n  };\n  return (\n    <div>\n      <QuoteForm isLoading={status === 'pending'} onAddQuote={addQuoteHandler} />\n    </div>\n  );\n};\n\nexport default NewQuotes;\n"],"sourceRoot":""}